[tool.poetry]
name = "randomwebsitebot"
version = "0.1.0"
description = "Tweet or toot random fun websites"
authors = ["Alexandru Cojocaru <hi@xojoc.pw>"]
license = "AGPL-3.0-or-later"

[tool.poetry.dependencies]
python = "^3.11"
tweepy = "^4"
requests = "^2"
beautifulsoup4 = "^4"
lxml = "^4"
praw = "^7"


[tool.poetry.group.types.dependencies]
types-requests = "^2.28.11.17"
types-beautifulsoup4 = "^4.12.0.3"
types-lxml = "^2023.3.28"

[tool.poetry.group.dev.dependencies]
black = "*"
ruff = "*"

[tool.ruff]
select = ['ALL']
ignore = [

	#'E501',
	#'D', # ignore docs for now
	#  'D100', 'D101', 'D102', 'D103', # missing doc strings
	#  'G004', # Logging statement uses f-string --> reenable
	#  'ERA001' # commented out code
          ]

line-length = 79
target-version = 'py311'
preview = true

[tool.ruff.extend-per-file-ignores]
"__init__.py" = ["CPY001", "D104"]
"test_*.py" = [
        'D', # documentation warnings
        'ANN', # annotations
	'S101', # asserts 
        'PLR6301' # self not used 
]

# [tool.ruff.flake8-annotations]
# ignore-fully-untyped = true
[tool.ruff.flake8-unused-arguments]
ignore-variadic-names = true
[tool.ruff.isort]
combine-as-imports = true
[tool.black]
line-length = 79
[tool.ruff.pydocstyle]
convention = 'google'

[tool.pyright]
typeCheckingMode = 'basic'
reportUnnecessaryIsInstance = 'warning'
reportUnnecessaryCast = 'warning'
reportUnnecessaryComparison = 'warning'
reportUnnecessaryContains = 'warning'
reportImplicitStringConcatenation = 'warning'
reportUnusedCallResult = 'warning'
reportUnusedExpression = 'warning'
reportUnnecessaryTypeIgnoreComment = 'warning'
reportMatchNotExhaustive = 'warning'
reportImplicitOverride = 'warning'
reportShadowedImports = 'warning'
reportPropertyTypeMismatch = 'warning'
reportFunctionMemberAccess = 'warning'
reportImportCycles = 'warning'
reportUnusedImport = false
reportUnusedClass = false
reportUnusedFunction = false
reportUnusedVariable = false
reportDuplicateImport = 'warning'
reportPrivateUsage = 'warning'
reportConstantRedefinition = 'warning'
reportDeprecated = 'warning'
reportIncompatibleMethodOverride = 'warning'
reportIncompatibleVariableOverride = 'warning'
reportInconsistentConstructor = 'warning'
reportOverlappingOverload = 'warning'
reportMissingSuperCall = 'warning'
reportUninitializedInstanceVariable = 'warning'



[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
